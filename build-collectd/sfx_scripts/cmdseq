#!/bin/bash
set -xe

if [ ${1+x} ]; then
    DEBUG=$1
    export DEBUG=$DEBUG
fi

echo "Repositories file:"
cat /etc/apt/sources.list

cat /opt/collectd-build/sfx_scripts/pbuilderrc > ~/.pbuilderrc

rm -rf /opt/workspace/*
mkdir -p /opt/workspace/collectd

cd /opt/workspace/collectd

rm -rf /opt/collectd/debian/
cp -rf /opt/collectd-build/debian/ .
cp -rf /opt/collectd/* .

sed -i 's/trusty/'${DISTRIBUTION}'/g' debian/changelog

if [ "$DISTRIBUTION" = "precise" ] || [ "$DISTRIBUTION" = "wheezy" ]; then
    patch -p0 < debian/patches/precise_control.patch
    patch -p0 < debian/patches/precise_rules.patch
elif [ "$DISTRIBUTION" = "bionic" ]; then
    patch -p0 < debian/patches/bionic_rules.patch
fi

#patch version-gen.sh
VERSION_TAG="$(head -1 debian/changelog | awk -F"[-~]" 'NF>2{print $2}')"

_NEW_VERSION=$(grep DEFAULT_VERSION= version-gen.sh  | awk -F\" '{ print $2; }' | perl -p -e "s/git/$VERSION_TAG/g;")
cat <<HERE > version-gen.sh
#!/bin/sh
printf "$_NEW_VERSION"
HERE

chmod 755 version-gen.sh

./build.sh
DIST=${DISTRIBUTION} ARCH=amd64 yes | debuild -us -uc -S
rm -rf /opt/result/*
mkdir -p /opt/result/debuild
cp -rf ../* /opt/result/debuild/

if [[ "$BUILD_PUBLISH" == "True" ]]; then
	DELETE_PUBUILDER_CACHE_FOLDER="rm -rf /var/cache/pbuilder/*"
else
	# make pbuilder faster during development by mounting the cached packages on to RAM
	mkdir -p /var/cache/pbuilder/build
	echo "tmpfs /var/cache/pbuilder/build tmpfs	defaults,auto 0	0" >> /etc/fstab
	mount /var/cache/pbuilder/build
	DELETE_PUBUILDER_CACHE_FOLDER=""
fi

eval $DELETE_PUBUILDER_CACHE_FOLDER
if [ "${DISTRIBUTION}" = "bionic" ]; then
    sudo DIST=${DISTRIBUTION} ARCH=amd64 pbuilder create --extrapackages apt-transport-https --debootstrapopts --include=gnupg,ca-certificates
else
    sudo DIST=${DISTRIBUTION} ARCH=amd64 pbuilder create
fi
DIST=${DISTRIBUTION} ARCH=amd64 pdebuild /opt/result/debuild/*.dsc
mkdir -p /opt/result/pdebuild/
cp /var/cache/pbuilder/${DISTRIBUTION}-amd64/result/* /opt/result/pdebuild/
eval $DELETE_PUBUILDER_CACHE_FOLDER
cd ..
rm -rf /opt/result/debuild/collectd

# Create unsigned PPA on the Amazon s3 bucket
cd /opt/result/
mkdir -p test/debs
cp -rf pdebuild/* test/debs/
cd test
dpkg-scanpackages debs /dev/null > Packages
